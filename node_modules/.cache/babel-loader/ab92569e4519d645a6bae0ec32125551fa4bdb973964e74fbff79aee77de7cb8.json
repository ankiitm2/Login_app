{"ast":null,"code":"import { toast, Toast } from \"react-hot-toast\";\n\n/** validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/** validate password */\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/** validate reset password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n}\n\n/** validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 Characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have a special character\");\n  }\n  return errors;\n}\n\n/** validate username */\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","Toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","specialChars","password","error","includes","length","test","username"],"sources":["C:/Users/Mishra/Documents/vs code/react/Login app/client/src/helper/validate.js"],"sourcesContent":["import { toast, Toast } from \"react-hot-toast\"\r\n\r\n/** validate login page username */\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate password */\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate reset password */\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    \r\n}\r\n\r\n\r\n/** validate password */\r\nfunction passwordVerify(errors = {}, values){\r\n    \r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        errors.password = toast.error(\"Password Required...!\");\r\n    }else if(values.password.includes(\" \")){\r\n        errors.password = toast.error(\"Wrong Password...!\");\r\n    }else if(values.password.length < 4){\r\n        errors.password = toast.error(\"Password must be more than 4 Characters long\");\r\n    }else if(!specialChars.test(values.password)){\r\n        errors.password = toast.error(\"Password must have a special character\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n/** validate username */\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username Required...!');\r\n    }else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Invalid Username...!')\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"AAAA,SAASA,KAAK,EAAEC,KAAK,QAAQ,iBAAiB;;AAE9C;AACA,OAAO,eAAeC,gBAAgB,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;;AAEA;AACA,OAAO,eAAeE,gBAAgB,CAACH,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;;AAEA;AACA,OAAO,eAAeI,uBAAuB,CAACL,MAAM,EAAC;EACjD,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;AAG7C;;AAGA;AACA,SAASI,cAAc,GAAqB;EAAA,IAApBH,MAAM,uEAAG,CAAC,CAAC;EAAA,IAAED,MAAM;EAEvC,MAAMM,YAAY,GAAG,yCAAyC;EAE9D,IAAG,CAACN,MAAM,CAACO,QAAQ,EAAC;IAChBN,MAAM,CAACM,QAAQ,GAAGV,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EAC1D,CAAC,MAAK,IAAGR,MAAM,CAACO,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCR,MAAM,CAACM,QAAQ,GAAGV,KAAK,CAACW,KAAK,CAAC,oBAAoB,CAAC;EACvD,CAAC,MAAK,IAAGR,MAAM,CAACO,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAC;IAChCT,MAAM,CAACM,QAAQ,GAAGV,KAAK,CAACW,KAAK,CAAC,8CAA8C,CAAC;EACjF,CAAC,MAAK,IAAG,CAACF,YAAY,CAACK,IAAI,CAACX,MAAM,CAACO,QAAQ,CAAC,EAAC;IACzCN,MAAM,CAACM,QAAQ,GAAGV,KAAK,CAACW,KAAK,CAAC,wCAAwC,CAAC;EAC3E;EAEA,OAAOP,MAAM;AACjB;;AAGA;AACA,SAASC,cAAc,GAAoB;EAAA,IAAnBM,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAER,MAAM;EACtC,IAAG,CAACA,MAAM,CAACY,QAAQ,EAAC;IAChBJ,KAAK,CAACI,QAAQ,GAAGf,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAGR,MAAM,CAACY,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCD,KAAK,CAACI,QAAQ,GAAGf,KAAK,CAACW,KAAK,CAAC,sBAAsB,CAAC;EACxD;EAEA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}