{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mishra\\\\Documents\\\\vs code\\\\react\\\\Login app\\\\client\\\\src\\\\components\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport avatar from '../assets/logo.png';\nimport { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { resetPasswordValidation } from '../helper/validate';\nimport styles from '../styles/Username.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reset() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      confirm_pwd: ''\n    },\n    validate: resetPasswordValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        styles: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-5xl font-bold\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"py-4 text-xl w-2/3 text-center text-gray-500\",\n            children: \"Enter new password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-20\",\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textBox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('password'),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('confirm_pwd'),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"Repeat Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"password\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Reset, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","Link","avatar","Toaster","useFormik","resetPasswordValidation","styles","Reset","formik","initialValues","password","confirm_pwd","validate","validateOnBlur","validateOnChange","onSubmit","values","console","log","glass","handleSubmit","getFieldProps","textbox","btn"],"sources":["C:/Users/Mishra/Documents/vs code/react/Login app/client/src/components/Reset.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport avatar from '../assets/logo.png';\r\nimport {Toaster} from 'react-hot-toast';\r\nimport {useFormik} from 'formik';\r\nimport { resetPasswordValidation } from '../helper/validate';\r\n\r\nimport styles from '../styles/Username.module.css';\r\n\r\nexport default function Reset() {\r\n\r\n  const formik = useFormik({\r\n    initialValues : {\r\n      password : '',\r\n      confirm_pwd: ''\r\n    },\r\n    validate: resetPasswordValidation,\r\n    validateOnBlur: false,\r\n    validateOnChange: false,\r\n    onSubmit: async values => {\r\n      console.log(values)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n      <div className='flex justify-center items-center h-screen'>\r\n        <div className={styles.glass} styles>\r\n\r\n          <div className=\"title flex flex-col items-center\">\r\n            <h4 className='text-5xl font-bold'>Reset</h4>\r\n            <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n              Enter new password.\r\n            </span>\r\n          </div>\r\n\r\n          <form className='py-20' onSubmit={formik.handleSubmit}>\r\n            <div className=\"textBox flex flex-col items-center gap-6\">\r\n              <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder=\"New Password\" />\r\n              <input {...formik.getFieldProps('confirm_pwd')} className={styles.textbox} type=\"text\" placeholder=\"Repeat Password\" />\r\n              <button className={styles.btn} type=\"password\">Reset</button>\r\n            </div>\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAAQC,OAAO,QAAO,iBAAiB;AACvC,SAAQC,SAAS,QAAO,QAAQ;AAChC,SAASC,uBAAuB,QAAQ,oBAAoB;AAE5D,OAAOC,MAAM,MAAM,+BAA+B;AAAC;AAEnD,eAAe,SAASC,KAAK,GAAG;EAAA;EAE9B,MAAMC,MAAM,GAAGJ,SAAS,CAAC;IACvBK,aAAa,EAAG;MACdC,QAAQ,EAAG,EAAE;MACbC,WAAW,EAAE;IACf,CAAC;IACDC,QAAQ,EAAEP,uBAAuB;IACjCQ,cAAc,EAAE,KAAK;IACrBC,gBAAgB,EAAE,KAAK;IACvBC,QAAQ,EAAE,MAAMC,MAAM,IAAI;MACxBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB;EACF,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAChC,QAAC,OAAO;MAAC,QAAQ,EAAC,YAAY;MAAC,YAAY,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAW,eAC9D;MAAK,SAAS,EAAC,2CAA2C;MAAA,uBACxD;QAAK,SAAS,EAAEV,MAAM,CAACa,KAAM;QAAC,MAAM;QAAA,wBAElC;UAAK,SAAS,EAAC,kCAAkC;UAAA,wBAC/C;YAAI,SAAS,EAAC,oBAAoB;YAAA,UAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK,eAC7C;YAAM,SAAS,EAAC,8CAA8C;YAAA,UAAC;UAE/D;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QACH,eAEN;UAAM,SAAS,EAAC,OAAO;UAAC,QAAQ,EAAEX,MAAM,CAACY,YAAa;UAAA,uBACpD;YAAK,SAAS,EAAC,0CAA0C;YAAA,wBACvD;cAAA,GAAWZ,MAAM,CAACa,aAAa,CAAC,UAAU,CAAC;cAAE,SAAS,EAAEf,MAAM,CAACgB,OAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,WAAW,EAAC;YAAc;cAAA;cAAA;cAAA;YAAA,QAAG,eACjH;cAAA,GAAWd,MAAM,CAACa,aAAa,CAAC,aAAa,CAAC;cAAE,SAAS,EAAEf,MAAM,CAACgB,OAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,WAAW,EAAC;YAAiB;cAAA;cAAA;cAAA;YAAA,QAAG,eACvH;cAAQ,SAAS,EAAEhB,MAAM,CAACiB,GAAI;cAAC,IAAI,EAAC,UAAU;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA;QACzD;UAAA;UAAA;UAAA;QAAA,QAED;MAAA;QAAA;QAAA;QAAA;MAAA;IAEH;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAzCuBhB,KAAK;EAAA,QAEZH,SAAS;AAAA;AAAA,KAFFG,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}