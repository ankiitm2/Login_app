{"ast":null,"code":"import { toast, Toast } from \"react-hot-toast\";\n\n/** validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/** validate password */\nfunction passwordVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}\n\n/** validate username */\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","Toast","usernameValidate","values","errors","usernameVerify","passwordVerify","error","username","includes"],"sources":["C:/Users/Mishra/Documents/vs code/react/Login app/client/src/helper/validate.js"],"sourcesContent":["import { toast, Toast } from \"react-hot-toast\"\r\n\r\n/** validate login page username */\r\nexport async function usernameValidate(values){\r\n    const errors = usernameVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\n/** validate password */\r\nfunction passwordVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username Required...!');\r\n    }else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Invalid Username...!')\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\n\r\n/** validate username */\r\nfunction usernameVerify(error = {}, values){\r\n    if(!values.username){\r\n        error.username = toast.error('Username Required...!');\r\n    }else if(values.username.includes(\" \")){\r\n        error.username = toast.error('Invalid Username...!')\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"AAAA,SAASA,KAAK,EAAEC,KAAK,QAAQ,iBAAiB;;AAE9C;AACA,OAAO,eAAeC,gBAAgB,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EAEzC,OAAOC,MAAM;AACjB;;AAEA;AACA,SAASE,cAAc,GAAoB;EAAA,IAAnBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEJ,MAAM;EACtC,IAAG,CAACA,MAAM,CAACK,QAAQ,EAAC;IAChBD,KAAK,CAACC,QAAQ,GAAGR,KAAK,CAACO,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAGJ,MAAM,CAACK,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCF,KAAK,CAACC,QAAQ,GAAGR,KAAK,CAACO,KAAK,CAAC,sBAAsB,CAAC;EACxD;EAEA,OAAOA,KAAK;AAChB;;AAGA;AACA,SAASF,cAAc,GAAoB;EAAA,IAAnBE,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEJ,MAAM;EACtC,IAAG,CAACA,MAAM,CAACK,QAAQ,EAAC;IAChBD,KAAK,CAACC,QAAQ,GAAGR,KAAK,CAACO,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAK,IAAGJ,MAAM,CAACK,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCF,KAAK,CAACC,QAAQ,GAAGR,KAAK,CAACO,KAAK,CAAC,sBAAsB,CAAC;EACxD;EAEA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}